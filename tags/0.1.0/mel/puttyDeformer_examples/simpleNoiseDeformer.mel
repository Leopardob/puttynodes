// examples script to use with mScriptDeformer
//
// a simple noise deformer
//

global proc float[] simpleNoiseDeformer(string $deformerName, int $count)
{
    // get all positions
    float $vPosition[] = `getAttr ($deformerName+".currentPosition")`; 
    float $vSamplePosition[] = $vPosition;
    
    // get node noise parameter
    float $frequency = `getAttr ($deformerName+".frequency")`;         
    float $amplitude = `getAttr ($deformerName+".amplitude")`; 
    float $offset = `getAttr ($deformerName+".offset")`;     
 //   float $vDirection[] = `getAttr ($deformerName+".displaceDirection")`; 
        
    // modify the sample points
    $vSamplePosition = mVecAdd($vSamplePosition, {$offset,$offset,$offset} );
    $vSamplePosition = mVecDblMult($vSamplePosition, $frequency);
    
    // now get a noise array
    int $size = mVecSize($vSamplePosition);
    float $dNoise[] = mDblCreate($size,0);
    
    // sample noise function the traditional way 
    for ($i=0; $i<$size;$i++)
    {
    	int $o = $i*3;
    	$dNoise[$i] = noise(<< $vSamplePosition[$o],$vSamplePosition[$o+1],$vSamplePosition[$o+2]>>);
    }
    
    // build a displacement vector
    $dNoise = mDblMult($dNoise,$amplitude);
    float $vDisplacement[] = mVecSetLength({0,1,0},$dNoise);//mVecSetLength($vDirection,$dNoise);
    
    // apply displacement
		$vPosition = mVecAdd($vPosition, $vDisplacement);
    
    // return deformed positions
    return $vPosition;
}

global proc addVecAttr(string $name, string $node)
{
	 // add vector attribute 
	 evalEcho( "addAttr -longName "+$name+" -at double3  "+$node);
	 
	 
	 	evalEcho( "addAttr -ln "+$name+"X -at double -p "+$name+" ");
	 	evalEcho( "addAttr -ln "+$name+"Y -at double -p "+$name+" "+$node);
	 	evalEcho( "addAttr -ln "+$name+"Z -at double -p "+$name+" "+$node);		
	
	 // set with default value (necessary or getAttr will fail!)		
	 evalEcho("setAttr -type double3 "+$node+"."+$name+" 0 0 0");
	 
		// set everything keyable
		string $objAttr = ( $node + "." + $name );
		evalEcho( "setAttr -e -keyable true " + $objAttr + ";" );
		
		// A compound isn't keyable unless all its children are.
		//
		evalEcho( "setAttr -e -keyable true " + $objAttr + "X;" );
		evalEcho( "setAttr -e -keyable true " + $objAttr + "Y;" );
		evalEcho( "setAttr -e -keyable true " + $objAttr + "Z;" );		
}
	
// function to add an attribute interface to the deformer node
// these interface attributes will be used in the main deformation
// function
global proc int simpleNoiseDeformer.interface(string $deformerName)
{
		// set deformer parameter
		// setAttr ($deformerName+". 
		
		// add attributes
    addAttr -longName frequency -defaultValue 1.0 -minValue -10 -maxValue 10 $deformerName;
    addAttr -longName amplitude -defaultValue 1.0 -minValue -10 -maxValue 10 $deformerName;
    addAttr -longName offset    -defaultValue 0.0 -minValue -10 -maxValue 10 $deformerName;
//		addVecAttr("displaceDirection",$deformerName);
   	     
    return true;
}


